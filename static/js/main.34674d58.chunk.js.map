{"version":3,"sources":["components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/Button/Button.js","components/Modal/Modal.js","services/news-api.js","components/ImageGallery/ImageGallery.js","App.js","index.js"],"names":["Searchbar","state","searchQuery","onInputChange","e","setState","target","value","toLowerCase","handleSubmit","preventDefault","trim","toast","props","onSubmit","className","this","type","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","name","url","onClick","src","alt","Button","modalRoot","document","querySelector","Modal","handleKeyDown","code","onClose","handleBackdropClick","currentTarget","window","addEventListener","removeEventListener","image","largeImageURL","tags","createPortal","fetchImages","q","currentPage","fetch","then","res","json","data","hits","map","id","webformatURL","ImageGallery","images","activeIdx","status","showModal","fetchNewImages","query","length","error","scrollTo","top","documentElement","scrollHeight","behavior","catch","handleLoadMore","prevState","toggleModal","showImage","index","findIndex","prevProps","color","height","width","PureComponent","App","handleFormSubmit","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"kSAiDeA,G,8NA5CbC,MAAQ,CACNC,YAAa,I,EAGfC,cAAgB,SAAAC,GACd,EAAKC,SAAS,CAAEH,YAAaE,EAAEE,OAAOC,MAAMC,iB,EAG9CC,aAAe,SAAAL,GAEb,GADAA,EAAEM,iBACoC,KAAlC,EAAKT,MAAMC,YAAYS,OACzB,OAAOC,YAAM,yBAGf,EAAKC,MAAMC,SAAS,EAAKb,MAAMC,aAC/B,EAAKG,SAAS,CAAEH,YAAa,M,uDAI7B,OACE,wBAAQa,UAAU,YAAlB,SACE,uBAAMA,UAAU,aAAaD,SAAUE,KAAKP,aAA5C,UACE,wBAAQQ,KAAK,SAASF,UAAU,oBAAhC,SACE,sBAAMA,UAAU,0BAAhB,sBAEF,uBACEA,UAAU,mBACVE,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,2BACZb,MAAOS,KAAKf,MAAMC,YAClBmB,SAAUL,KAAKb,yB,GAjCHmB,c,QCiBTC,MAnBf,YAAmD,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,IAAKC,EAAW,EAAXA,QACrC,OACE,oBAAIX,UAAU,mBAAd,SACE,qBACEY,IAAKF,EACLG,IAAKJ,EACLT,UAAU,yBACVW,QAASA,O,iBCPF,SAASG,EAAT,GAA8B,IAAZH,EAAW,EAAXA,QAC/B,OACE,wBAAQT,KAAK,SAASF,UAAU,SAASW,QAASA,EAAlD,uBCAJ,IAAMI,EAAYC,SAASC,cAAc,eAEpBC,E,4MASnBC,cAAgB,SAAA9B,GACC,WAAXA,EAAE+B,MACJ,EAAKtB,MAAMuB,W,EAIfC,oBAAsB,SAAAjC,GAChBA,EAAEE,SAAWF,EAAEkC,eACjB,EAAKzB,MAAMuB,W,kEAfbG,OAAOC,iBAAiB,UAAWxB,KAAKkB,iB,6CAIxCK,OAAOE,oBAAoB,UAAWzB,KAAKkB,iB,+BAenC,IAAD,EACyBlB,KAAKH,MAAM6B,MAAnCC,EADD,EACCA,cAAeC,EADhB,EACgBA,KAEvB,OAAOC,uBACL,qBAAK9B,UAAU,UAAUW,QAASV,KAAKqB,oBAAvC,SACE,qBAAKtB,UAAU,QAAf,SACE,qBAAKY,IAAKgB,EAAef,IAAKgB,QAGlCd,O,GA9B6BR,aCN5B,SAASwB,EAAYC,EAAGC,GAC7B,OAAOC,MAAM,8BAAD,OACoBF,EADpB,iBAC8BC,EAD9B,gGAGTE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OACRA,EAAKC,KAAKC,KAAI,kBAAgD,CAC5DC,GADY,EAAGA,GAEfC,aAFY,EAAOA,aAGnBd,cAHY,EAAqBA,cAIjCC,KAJY,EAAoCA,Y,ICGnCc,E,4MACnBzD,MAAQ,CACN0D,OAAQ,GACRX,YAAa,EACbY,UAAW,KACXC,OAAQ,OACRC,WAAW,G,EA2CbC,eAAiB,WACf,EAAK1D,SAAS,CAAEwD,OAAQ,YADH,IAEbb,EAAgB,EAAK/C,MAArB+C,YAERF,EADU,EAAKjC,MAAMmD,MACNhB,GACZE,MAAK,SAAAS,GAAM,OAAI,EAAKtD,SAAS,CAAEsD,cAC/BT,MAAK,WAC6B,IAA7B,EAAKjD,MAAM0D,OAAOM,QACpBrD,IAAMsD,MAAN,uBACA,EAAK7D,SAAS,CAAEwD,OAAQ,WAExB,EAAKxD,SAAS,CAAEwD,OAAQ,aAExBtB,OAAO4B,SAAS,CACdC,IAAKrC,SAASsC,gBAAgBC,aAC9BC,SAAU,eAIfC,OAAM,kBAAM,EAAKnE,SAAS,CAAEwD,OAAQ,iB,EAGzCY,eAAiB,WACf,EAAKpE,UAAS,SAAAqE,GAAS,MAAK,CAC1B1B,YAAa0B,EAAU1B,YAAc,O,EAIzC2B,YAAc,WACZ,EAAKtE,UAAS,kBAAoB,CAChCyD,WADY,EAAGA,e,EAInBc,UAAY,SAAAxE,GACV,IAAMyE,EAAQ,EAAK5E,MAAM0D,OAAOmB,WAC9B,SAAApC,GAAK,OAAIA,EAAMe,eAAiBrD,EAAEE,OAAOqB,OAG3C,EAAKtB,SAAS,CAAEuD,UAAWiB,EAAOf,WAAW,K,kEA7E7C9C,KAAK+C,mB,yCAGYgB,EAAWL,GAAY,IAAD,OAWvC,GAVIK,EAAUf,QAAUhD,KAAKH,MAAMmD,QACjChD,KAAKX,SAAS,CACZsD,OAAQ,GACRX,YAAa,EACbY,UAAW,KACXC,OAAQ,SAEV7C,KAAK+C,kBAILgB,EAAUf,QAAUhD,KAAKH,MAAMmD,OAC/BU,EAAU1B,cAAgBhC,KAAKf,MAAM+C,YACrC,CACAhC,KAAKX,SAAS,CAAEwD,OAAQ,YADxB,IAEQb,EAAgBhC,KAAKf,MAArB+C,YAERF,EADU9B,KAAKH,MAAMmD,MACNhB,GACZE,MAAK,SAAAS,GAAM,OACV,EAAKtD,UAAS,SAAAqE,GAAS,MAAK,CAC1Bf,OAAO,GAAD,mBAAMe,EAAUf,QAAhB,YAA2BA,WAGpCT,MAAK,WACJ,EAAK7C,SAAS,CAAEwD,OAAQ,aACxBtB,OAAO4B,SAAS,CACdC,IAAKrC,SAASsC,gBAAgBC,aAC9BC,SAAU,cAGbC,OAAM,kBAAM,EAAKnE,SAAS,CAAEwD,OAAQ,mB,+BA8CjC,IAAD,SAC0C7C,KAAKf,MAA9C0D,EADD,EACCA,OAAQE,EADT,EACSA,OAAQD,EADjB,EACiBA,UAAWE,EAD5B,EAC4BA,UAEnC,OACE,qCACc,aAAXD,GAAyBjD,IAAMsD,MAAN,iCAExB,oBAAInD,UAAU,eAAd,SACG4C,EAAOJ,KAAI,gBAAGC,EAAH,EAAGA,GAAIZ,EAAP,EAAOA,KAAMa,EAAb,EAAaA,aAAb,OACV,cAAC,EAAD,CAEEjC,KAAMoB,EACNnB,IAAKgC,EACL/B,QAAS,EAAKkD,WAHTpB,QAQb,sBAAKzC,UAAU,YAAf,UACc,YAAX8C,GACC,cAAC,IAAD,CAAQ5C,KAAK,YAAY+D,MAAM,UAAUC,OAAQ,GAAIC,MAAO,KAE7DvB,EAAOM,OAAS,GAAgB,aAAXJ,GACpB,cAAChC,EAAD,CAAQH,QAASV,KAAKyD,oBAGzBX,GACC,cAAC,EAAD,CAAOpB,MAAOiB,EAAOC,GAAYxB,QAASpB,KAAK2D,qB,GArHfQ,iBCuB3BC,E,4MAvBbnF,MAAQ,CACN+D,MAAO,I,EAGTqB,iBAAmB,SAAArB,GACjB,EAAK3D,SAAS,CACZ2D,MAAOA,K,uDAID,IACAA,EAAUhD,KAAKf,MAAf+D,MAER,OACE,gCACE,cAAC,EAAD,CAAWlD,SAAUE,KAAKqE,mBAC1B,cAAC,IAAD,CAAgBC,UAAW,MAC1BtB,GAAS,cAAC,EAAD,CAAcA,MAAOA,W,GAlBrB1C,aCFlBiE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF1D,SAAS2D,eAAe,W","file":"static/js/main.34674d58.chunk.js","sourcesContent":["import { Component } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Searchbar extends Component {\r\n  state = {\r\n    searchQuery: '',\r\n  };\r\n\r\n  onInputChange = e => {\r\n    this.setState({ searchQuery: e.target.value.toLowerCase() });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (this.state.searchQuery.trim() === '') {\r\n      return toast('Enter some image name');\r\n    }\r\n\r\n    this.props.onSubmit(this.state.searchQuery);\r\n    this.setState({ searchQuery: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            value={this.state.searchQuery}\r\n            onChange={this.onInputChange}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Searchbar;\r\n","import PropTypes from 'prop-types';\r\n\r\nfunction ImageGalleryItem({ name, url, onClick }) {\r\n  return (\r\n    <li className=\"ImageGalleryItem\">\r\n      <img\r\n        src={url}\r\n        alt={name}\r\n        className=\"ImageGalleryItem-image\"\r\n        onClick={onClick}\r\n      />\r\n    </li>\r\n  );\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  url: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import PropTypes from 'prop-types';\r\n\r\nexport default function Button({ onClick }) {\r\n  return (\r\n    <button type=\"button\" className=\"Button\" onClick={onClick}>\r\n      Load more\r\n    </button>\r\n  );\r\n}\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n","import { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nexport default class Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = e => {\r\n    if (e.code === 'Escape') {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  handleBackdropClick = e => {\r\n    if (e.target === e.currentTarget) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { largeImageURL, tags } = this.props.image;\r\n\r\n    return createPortal(\r\n      <div className=\"Overlay\" onClick={this.handleBackdropClick}>\r\n        <div className=\"Modal\">\r\n          <img src={largeImageURL} alt={tags} />\r\n        </div>\r\n      </div>,\r\n      modalRoot,\r\n    );\r\n  }\r\n}\r\n\r\nModal.propTypes = {\r\n  image: PropTypes.exact({\r\n    id: PropTypes.number,\r\n    webformatURL: PropTypes.string,\r\n    largeImageURL: PropTypes.string.isRequired,\r\n    tags: PropTypes.string.isRequired,\r\n  }),\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\n","export function fetchImages(q, currentPage) {\r\n  return fetch(\r\n    `https://pixabay.com/api/?q=${q}&page=${currentPage}&key=19547883-c83eecf3fafc0cf8c7a25c2e3&image_type=photo&orientation=horizontal&per_page=12`,\r\n  )\r\n    .then(res => res.json())\r\n    .then(data =>\r\n      data.hits.map(({ id, webformatURL, largeImageURL, tags }) => ({\r\n        id,\r\n        webformatURL,\r\n        largeImageURL,\r\n        tags,\r\n      })),\r\n    );\r\n}\r\n\r\n// export default { fetchImages };\r\n","import { PureComponent } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport ImageGalleryItem from '../ImageGalleryItem';\r\nimport Loader from 'react-loader-spinner';\r\nimport Button from '../Button';\r\nimport Modal from '../Modal';\r\nimport { fetchImages } from '../../services/news-api';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class ImageGallery extends PureComponent {\r\n  state = {\r\n    images: [],\r\n    currentPage: 1,\r\n    activeIdx: null,\r\n    status: 'idle',\r\n    showModal: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.fetchNewImages();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.query !== this.props.query) {\r\n      this.setState({\r\n        images: [],\r\n        currentPage: 1,\r\n        activeIdx: null,\r\n        status: 'idle',\r\n      });\r\n      this.fetchNewImages();\r\n    }\r\n\r\n    if (\r\n      prevProps.query === this.props.query &&\r\n      prevState.currentPage !== this.state.currentPage\r\n    ) {\r\n      this.setState({ status: 'pending' });\r\n      const { currentPage } = this.state;\r\n      const q = this.props.query;\r\n      fetchImages(q, currentPage)\r\n        .then(images =>\r\n          this.setState(prevState => ({\r\n            images: [...prevState.images, ...images],\r\n          })),\r\n        )\r\n        .then(() => {\r\n          this.setState({ status: 'resolved' });\r\n          window.scrollTo({\r\n            top: document.documentElement.scrollHeight,\r\n            behavior: 'smooth',\r\n          });\r\n        })\r\n        .catch(() => this.setState({ status: 'rejected' }));\r\n    }\r\n    return;\r\n  }\r\n\r\n  fetchNewImages = () => {\r\n    this.setState({ status: 'pending' });\r\n    const { currentPage } = this.state;\r\n    const q = this.props.query;\r\n    fetchImages(q, currentPage)\r\n      .then(images => this.setState({ images }))\r\n      .then(() => {\r\n        if (this.state.images.length === 0) {\r\n          toast.error(`No such name exists`);\r\n          this.setState({ status: 'idle' });\r\n        } else {\r\n          this.setState({ status: 'resolved' });\r\n\r\n          window.scrollTo({\r\n            top: document.documentElement.scrollHeight,\r\n            behavior: 'smooth',\r\n          });\r\n        }\r\n      })\r\n      .catch(() => this.setState({ status: 'rejected' }));\r\n  };\r\n\r\n  handleLoadMore = () => {\r\n    this.setState(prevState => ({\r\n      currentPage: prevState.currentPage + 1,\r\n    }));\r\n  };\r\n\r\n  toggleModal = () => {\r\n    this.setState(({ showModal }) => ({\r\n      showModal: !showModal,\r\n    }));\r\n  };\r\n  showImage = e => {\r\n    const index = this.state.images.findIndex(\r\n      image => image.webformatURL === e.target.src,\r\n    );\r\n\r\n    this.setState({ activeIdx: index, showModal: true });\r\n  };\r\n\r\n  render() {\r\n    const { images, status, activeIdx, showModal } = this.state;\r\n\r\n    return (\r\n      <>\r\n        {status === 'rejected' && toast.error(`oops ... something went wrong`)}\r\n        {\r\n          <ul className=\"ImageGallery\">\r\n            {images.map(({ id, tags, webformatURL }) => (\r\n              <ImageGalleryItem\r\n                key={id}\r\n                name={tags}\r\n                url={webformatURL}\r\n                onClick={this.showImage}\r\n              />\r\n            ))}\r\n          </ul>\r\n        }\r\n        <div className=\"container\">\r\n          {status === 'pending' && (\r\n            <Loader type=\"ThreeDots\" color=\"#00BFFF\" height={80} width={80} />\r\n          )}\r\n          {images.length > 0 && status === 'resolved' && (\r\n            <Button onClick={this.handleLoadMore} />\r\n          )}\r\n        </div>\r\n        {showModal && (\r\n          <Modal image={images[activeIdx]} onClose={this.toggleModal} />\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  query: PropTypes.string.isRequired,\r\n};\r\n","import { Component } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './App.css';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\n\nclass App extends Component {\n  state = {\n    query: '',\n  };\n\n  handleFormSubmit = query => {\n    this.setState({\n      query: query,\n    });\n  };\n\n  render() {\n    const { query } = this.state;\n\n    return (\n      <div>\n        <Searchbar onSubmit={this.handleFormSubmit} />\n        <ToastContainer autoClose={3000} />\n        {query && <ImageGallery query={query} />}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}